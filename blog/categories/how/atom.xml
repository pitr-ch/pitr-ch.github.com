<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: how | Pitr.ch]]></title>
  <link href="http://blog.pitr.ch/blog/categories/how/atom.xml" rel="self"/>
  <link href="http://blog.pitr.ch/"/>
  <updated>2013-06-14T10:49:58+02:00</updated>
  <id>http://blog.pitr.ch/</id>
  <author>
    <name><![CDATA[Petr Chalupa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[How to get object reference from inspection-string]]></title>
    <link href="http://blog.pitr.ch/blog/2013/06/03/how-to-get-object-reference-from-inspection-string/"/>
    <updated>2013-06-03T19:22:00+02:00</updated>
    <id>http://blog.pitr.ch/blog/2013/06/03/how-to-get-object-reference-from-inspection-string</id>
    <content type="html"><![CDATA[<!-- more -->

<p>Suppose there is a test failing and only an inspection string is shown in the error message.</p>
<div class="highlight"><pre><code class="text">#&lt;Class:0x007ff706e7eb68&gt;
</code></pre></div>
<p>It would be very convenient to retrieve a reference to the object for further inspection.
The following snippet will give you the object if it isn&#39;t garbage-collected yet.</p>
<div class="highlight"><pre><code class="ruby"><span class="no">ObjectSpace</span><span class="o">.</span><span class="n">_id2ref</span> <span class="s1">&#39;0x007ff706e7eb68&#39;</span><span class="o">.</span><span class="n">to_i</span><span class="p">(</span><span class="mi">16</span><span class="p">)</span> <span class="o">&gt;&gt;</span> <span class="mi">1</span>
</code></pre></div>
<p>If you are asking about the strange bit shift <code>&gt;&gt; 1</code> as I am, I&#39;ll humbly point you to 
<a href="http://stackoverflow.com/questions/2818602/in-ruby-why-does-inspect-print-out-some-kind-of-object-id-which-is-different">http://stackoverflow.com/questions/2818602/in-ruby-why-does-inspect-print-out-some-kind-of-object-id-which-is-different</a> 
where you can find some explanation.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[How to find pull-request by a commit sha]]></title>
    <link href="http://blog.pitr.ch/blog/2013/05/15/how-to-find-pull-request-by-a-commit-sha/"/>
    <updated>2013-05-15T11:00:00+02:00</updated>
    <id>http://blog.pitr.ch/blog/2013/05/15/how-to-find-pull-request-by-a-commit-sha</id>
    <content type="html"><![CDATA[<!-- more -->

<p>Lets have a commit <code>E</code> which is in some unknown pull-request.
<code>--ancestry-path</code> option can be used to list all commits between master and <code>E</code></p>
<div class="highlight"><pre><code class="text">git log --ancestry-path master ^E
</code></pre></div>
<p>for:</p>
<div class="highlight"><pre><code class="text">A last commit in master
B Merge pull request #2258 ...
|\
C | some comiit in master
| D onther commit in searched pull-request
| E given commit
</code></pre></div>
<p>it returns:</p>
<div class="highlight"><pre><code class="text">A last commit in master
B Merge pull request #2258 ...
D onther commit in searched pull-request
</code></pre></div>
<p>If last merge commit from the list is taken we get the merge commit for <code>E</code> with searched pull-request number.
To do that we use options:</p>
<div class="highlight"><pre><code class="text">git log --reverse --grep=\&quot;Merge pull request\&quot; -n 1 --ancestry-path master ^E
</code></pre></div>
<p>which returns only <code>B Merge pull request #2258</code> the merge commit with searched pull-request number.</p>

<h2>Git Alias</h2>

<p>For convenience it can be turned into git alias.</p>
<div class="highlight"><pre><code class="text">logpr = !sh -c &#39;git log --reverse --grep=\&quot;Merge pull request\&quot; -n 1 \
    --ancestry-path master ^$1 $@&#39; -
</code></pre></div>
<p>Then</p>
<div class="highlight"><pre><code class="text">$ git logpr 4b6d8f9 --oneline
d2a35bc Merge pull request #2258 from daviddavis/temp_1368456830
</code></pre></div>
<h2>Caution</h2>

<p>This works only if all pull-requests are merged directly into master. </p>
]]></content>
  </entry>
  
</feed>
