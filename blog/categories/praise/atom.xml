<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: praise | Pitr.ch]]></title>
  <link href="http://blog.pitr.ch/blog/categories/praise/atom.xml" rel="self"/>
  <link href="http://blog.pitr.ch/"/>
  <updated>2013-11-27T21:49:20+01:00</updated>
  <id>http://blog.pitr.ch/</id>
  <author>
    <name><![CDATA[Petr Chalupa]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Praise - bump to version 0.0.3]]></title>
    <link href="http://blog.pitr.ch/blog/2013/06/01/praise-bump-to-version-0-dot-0-3/"/>
    <updated>2013-06-01T19:05:00+02:00</updated>
    <id>http://blog.pitr.ch/blog/2013/06/01/praise-bump-to-version-0-dot-0-3</id>
    <content type="html"><![CDATA[<!-- more -->

<h2>Enabling and Disabling</h2>

<p>Method <code>#enable=</code> has been given to <code>praise</code> in this version. Use <code>praise.enable = true</code> to install its hook to <code>Kernel</code> 
and <code>praise.enable = false</code> to uninstall it.</p>
<div class="highlight"><pre><code class="ruby"><span class="no">Praise</span> <span class="o">=</span> <span class="no">PraiseImpl</span><span class="o">.</span><span class="n">new</span><span class="p">(</span>
    <span class="s1">&#39;path_to_ignore_file.yml&#39;</span><span class="p">,</span> 
    <span class="kp">false</span><span class="p">)</span> <span class="c1"># to instantiate it disabled</span>
<span class="no">Praise</span><span class="o">.</span><span class="n">enable</span> <span class="o">=</span> <span class="kp">true</span>   
</code></pre></div>]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Praise - pry session for every exception]]></title>
    <link href="http://blog.pitr.ch/blog/2013/05/14/praise-pry-session-for-every-exception/"/>
    <updated>2013-05-14T15:09:00+02:00</updated>
    <id>http://blog.pitr.ch/blog/2013/05/14/praise-pry-session-for-every-exception</id>
    <content type="html"><![CDATA[<p>I&#39;ve just released a new gem <strong>praise</strong> (pry + raise = praise).
A small gem for intercepting <code>raise</code> calls to dig up hidden and buried exceptions.</p>

<!-- more -->

<h2>Difference between <code>praise</code> and <code>pry-rescue</code></h2>

<p><code>praise</code> allows a developer to investigate all exceptions including the ones rescued later.
<code>pry-rescue</code> on the other hand will work only for exceptions which are un-handled by the process.
Typical use-case is e.g. a worker, which is rescuing all exceptions. <code>pry-rescue</code> cannot help with
investigation of these exceptions.</p>

<h2>Do you wish to know more?</h2>

<ul>
<li>  Documentation: <a href="http://blog.pitr.ch/praise">http://blog.pitr.ch/praise</a></li>
<li>  Source: <a href="https://github.com/pitr-ch/praise">https://github.com/pitr-ch/praise</a></li>
<li>  Blog: <a href="http://blog.pitr.ch/blog/categories/praise/">http://blog.pitr.ch/blog/categories/praise/</a></li>
</ul>
]]></content>
  </entry>
  
</feed>
